帮助命令：
 	docker   version       查看docker的版本信息，
	docker   info             查看Docker的系统信息，例如CPU、内存、容器个数等
	docker   --help         Usage:	docker [OPTIONS] COMMAND

镜像命令：一般都有[:TAG]
	docker    images  
		-a : 列出本地所有的镜像(包含中间映像层)
		-q : 只显示镜像ID
	docker    search   某个镜像的名字  【从https://hub.docker.com上查找】
	docker    pull    镜像名字 [:TAG]
	docker    rmi  -f   某个xxx镜像名字ID  
                 	docker commit -m "提交的描述信息"   -a="作者"   容器ID  要创建的目标镜像名:[标签名]
      	提交容器副本使之成为本地新的镜像：例如：tancanghai/tomcat:1.2
  
容器命令：【有镜像才能创建容器】
	新建并启动容器：
		docker run    [OPTIONS] IMAGE [COMMAND] [ARG...]
		创建从本地或者仓库镜像实例一个容器并运行
 			OPTIONS说明（常用）：有些是一个减号，有些是两个减号
			--name="容器新名字": 为容器指定一个名称；
			-d: 后台运行容器，并返回容器ID，也即启动守护式容器；
			-i：以交互模式运行容器，通常与 -t 同时使用；
			-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；
			-P: 随机端口映射；
			-p: 指定端口映射，有以下四种格式
  			       ip:hostPort:containerPort
   			       ip::containerPort
     			       hostPort:containerPort  
   			       containerPort
	启动交互式容器：
		#使用镜像centos:latest以交互模式启动一个容器,在容器内执行/bin/bash命令。
		docker run -it centos /bin/bash 

	启动守护式容器：
		docker run -d 容器名
 		docker run -d centos  /bin/sh  -c "while true;do echo hello zzyy;sleep 2;done"

	列出容器：
		docker ps [options] 
			-a :列出当前所有正在运行的容器+历史上运行过的
			-l :显示最近创建的容器。
			-n：显示最近n个创建的容器。
			-q :静默模式，只显示容器编号。
			--no-trunc :不截断输出。
	退出容器：
		exit  容器不停止退出
		ctrl+P+Q 容器不停止退出
	启动容器：
		docker start  容器ID或者容器名
	重启容器：
		docker restart 容器ID或者容器名
	停止容器：
		docker stop 容器DI或者容器名
	强制停止容器：
		docker kill 容器ID 或者容器名
	删除已经停止的容器：
		docker rm 容器ID 
	查看容器日志：
		docker logs -f -t  --tail容器ID
			*   -t 是加入时间戳
			*   -f 跟随最新的日志打印
			*   --tail 数字 显示最后多少条
	查看容器内部运行的进程：
		docker top 容器ID
	查看容器内部细节：(用json表示容器信息)
		docker inspect 容器ID 
	进入容器 ：
		docker exec -it 容器ID  /bin/bash
	从容器内拷贝文件到主机上：
		docker cp 容器ID:容器内路径(绝对路径)     目的主机路径(绝对路径) 