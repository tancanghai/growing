PHP匿名函数和闭包使用的句法与普通函数相同,但匿名函和闭包数其实是伪装成函数的对象.

匿名函数:就是没有名称的函数.匿名函数可以赋值给变量,对象传递.不过匿名函数仍是函数,因此可以调用,还可以传入参数.匿名函数特别适合作为函数或方法的回调.

闭包:是指在创建时封装周围状态的函数.即使闭包所在的环境不存在了,闭包中封装的状态依然存在.

注意:理论上讲,闭包和匿名函数是不同的概念. 不过,PHP将其视作相同的概念.

匿名函数的语法:

1 $func = function(){
2     
3 };//带结束符
示例demo:

1 $func = function($param){
2     echo($param);
3 };
4 $func('hello world');
 

实现闭包?

将匿名函数在普通函数中当做参数传入,也可以被返回.这就实现了一个简单的闭包.

示例demo:


1 //(示例1):函数里定义一个匿名函数,并且调用它
2 function content(){
3     $func = function($param){
4         echo $param;
5     };
6     $func('hello world');
7 }
8 content();

1 //(示例2):函数中把匿名函数返回,返回后调用它
2 function content(){
3     return $func = function($param){
4         echo $param;
5     };
6 }
7 $data = content();
8 $data('hello world');

 1 //(示例3):把匿名函数当做参数传递,并且调用它
 2 function callFunc($func){
 3     $func('hello world');
 4 }
 5 $data = function($param){
 6     echo $param;
 7 };
 8 callFunc($data);die;
 9 
10 //直接将匿名函数进行传递
11 callFunc(function($param){
12     echo $param;
13 });
