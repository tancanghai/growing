1. 创建ApiException 
namespace app\api\common;

use think\Exception;
class ApiException extends Exception
{
    public $message = '';
    public $httpCode = 500;
    public $code = 0;
    public function __construct($message = '', $httpCode = 0,$code = 0)
    {
        $this->httpCode = $httpCode;
        $this->message = $message;
        $this->code = $code;
    }

}

2. 创建ApiHandleException 
<?php

namespace app\api\common;

use app\api\common\Info;
use think\exception\Handle;

class ApiHandleException extends Handle
{
    public $httpCode=500;

    public function render(\Exception $e)
    {
        //打开调试的时候使用父render
        if(config('app_debug')==true){
            return parent::render($e);
        }
        //修改内部异常处理时候的状态码
        if ($e instanceof ApiException) {
            $this->httpCode = $e->httpCode;
        }
        //服务端异常返还json数据
            return Info::show(0, $e->getMessage(), [], $this->httpCode);//错误时候执行这条代码  返回例如：{"stauts":0,"data":[],"msg":"Parse error: syntax error, unexpected 'rr' (T_STRING)"}


    }
}

3. 使用
use app\api\common\Info;
use app\api\common\ApiException;
    public function index()
    {
        $data = input();
        ddd;//错误服务端 服务端异常处理 500
        if ($data['key'] == 3) {
           throw new ApiException('您提交的数据不合法！',401); //内部异常处理
        }
        return Info::show(1, "成功", $data, 200);//正常返还数据
    }

4. show方法
    public static function show($status, $msg, $data = [], $code = 200)
    {
        $datas = [
            'status' => $status,
            'msg' => $msg,
            'data' => $data
        ];
        return json($datas, $code);//help文件json()能添加状态码
    }