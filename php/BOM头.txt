BOM头
BOM: Byte Order Mark

UTF-8 BOM又叫UTF-8 签名,其实UTF-8 的BOM对UFT-8没有作用,是为了支援UTF-16,UTF-32才加上的BOM,BOM签名的意思就是告诉编辑器当前文件采用何种编码,
方便编辑器识别,但是BOM虽然在编辑器中不显示,但是会产生输出,就像多了一个空行

这些大部分是编辑器的问题,PHP文件采用UTF-8编码,PHP开发大部分使用的文本编辑软件如：Zend studio、editplus、eclipse等等都可以显示并编辑UTF-8编码的文件,
但是也有一些软件不能满足这个要求.

类似如windows的记事本,在保存一个以UTF-8编码的文件时,会在文件开始的地方插入三个不可见的字符（0xEF 0xBB 0xBF,即BOM）.它是一串隐藏的字符,用于让记事本
等编辑器识别这个文件是否以UTF-8编码.对于一般的文件,这样并不会产生什么麻烦.但对于 PHP来说,BOM是个大麻烦.

对于BOM,PHP并不会忽略,在读取、包含或者引用这些文件时,PHP会把BOM作为文件开头正文的一部分,根据嵌入式语言的特点,这串字符将被直接执行（显示）出来.这就
导致了一些页面的头部总是有一条白条,尽管样式padding、margin等各方面都设置好也无法让整个网页紧贴浏览器顶部,这头部白条就是这3个不可见的字符（0xEF 0xBB 0xBF,
即BOM）;

另外还有的问题就是,受COOKIE送出机制的限制,在这些文件开头已经有BOM的文件中,COOKIE无法送出（因为在COOKIE送出前PHP已经送出了文件头）,所以登入和登出功能
失效.一切依赖COOKIE、SESSION实现的功能全部无效.

所以,在编辑、修改任何文本文件的时候,请使用不会乱加BOM的编辑器.Linux下的编辑器应该都没有这个问题.WINDOWS下,请勿使用记事本等编辑器.推荐使用Editplus,
Zend studio、eclipse等编辑器.

其他的对于已经添加了BOM的文件,要取消的话,可以用不会乱加BOM的编辑器另存一次.当然也可以使用以下方法去除该目录下所有文件的头部BOM:

在Windows下用记事本之类的程序将文本文件保存为UTF-8格式时，记事本会在文件头前面加上几个不可见的字符（EF BB BF），就是所谓的BOM（Byte order Mark）。
在utf-8编码文件中BOM在文件头部，占用三个字节，用来标示该文件属于utf-8编码，现在已经有很多软件识别bom头，但是还有些不能识别bom头，比如PHP就不能识别
bom头，这也是用记事本编辑utf-8编码后执行就会出错的原因了。不仅限于 记事本保存的文件，只要在文件的开口包含了EF BB BF 几个不可见的字符（十六进制应该是是xEFxBBxBF，
用二进制编辑文件可见）。这像是一个约定俗成的东西，当系统看到这玩意的时候，就会觉得你这个文件是UTF-8编码的。
如果你的接口是UTF-8的，你需要强制下载一个文件，比如csv.excel在默认情况（中文背景）下，认为csv是GB编码的，所以如果米有bom头，那你给用户呈现的文件，
可能就是乱码了。