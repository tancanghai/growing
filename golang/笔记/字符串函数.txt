
func  init(){
	//var n string = "你好"
	//var as=[]rune(n)
	//fmt.Println(len(n))// 返回字符串长度
	//for  i :=0;i<len(as);i++ {
		//fmt.Println(n[i])// 打印 103 104  100 100
		//golang的编码同意为utf-8 （ascii的字符（字母和数字）占一个字节，汉字占用3个字节）
  		//Golang中string类型的底层是通过byte 数组 实现
  		//在utf-8编码中,中文字符占三个字节而Golang的默认编码正是utf-8.
		//fmt.Printf("%c\n",as[i])
	//}

	//n,err := strconv.Atoi("hrrrr")
	////字符串转换为整型  转换成功为转换后数字  转换不成功输出错误原因
	//if err != nil{
	//	fmt.Println(err)
	//}else{
	//	fmt.Println(n)
	//}

	//var strings string="刘大佬"
	//var bytes= []byte(strings)
	//fmt.Printf("%v",bytes)//[229 136 152 229 164 167 228 189 172]

	//var stringss="tancanghai"
	//var minString="tan"
	//fmt.Println(strings.Contains(stringss,minString))//查找是否包含子字符串

	strings.Index("andk","and")
	//返回子串再字符串在字符串种第一次出现的位置；

	//将子串替换成另外一个子串 strings.Replace(s, old, new string, n int) n表示替换几个  n=-1表示全部替换
	//切割字符串strings.Split(string,符号)
	//将字符串转换成大小写     strings.ToLower()    strings.ToUpper()
	//将字符串左右俩边的空格去掉：strings.TrimSpace(string)  strings.Trim(string) strings.TrimLeft(string)  strings.TrimRight(string)

}