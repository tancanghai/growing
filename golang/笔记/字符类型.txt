go没有专门的字符类型，如果要存储单个字符，一般使用byte类型来保存。

字符串就是一串固定长度的字符连接起来的字符序列。go的字符串时有单个字节连接起来的。
也就是说对于传统的字符串时由字符组成的。 而go的字符串不同，它时由字节组成的。

ascii编码只有255个 美国人编写    ；unicode时各国字符编码 时ascii的扩展；utf-8是unicode的规范化；
 
当我们直接输出byte值，就是输出了对应的字符的ascii码值 因为ascii编码刚好在-128-127范围内
超出这部分的字符编码 是utf-8编码，所以需要使用int来表示；
如果想输出对应字符，需要使用格式化输出 %c
	var c1 byte='a'
	var c2 int='中'
	//var c2 byte='中'//报错 因为byte不能承接中文 字符太小
	var c3 byte='9'
	fmt.Println(c1)
	fmt.Println(c2)
	fmt.Println(c3)

1.字符常量是用单引号‘’括起来的单个字符，例如：var c1 byte='a' var c2 byte='中' var c1 byte='9'
2.go语言字符使用的是UTF-8编码；
3.在go中，字符的本质是一个整数，直接输出时，是该字符对应的utf-8编码值；
4.可以将某个变量赋一个数字，然后按格式化输出时%c，会输出该数字对应的unicode字符；
5.字符直接可以进行运算，相当于对应的码值整数之间的运算；