"use strict" 的目的是指定代码在严格条件下执行。
严格模式的好处

（1）通过它们可以来消除一些JavaScript中的无声错误
（2）修复了JavaScript引擎难以执行优化的错误。
（3）禁止使用可能在ECMAScript的未来版本中定义的潜在保留字。
（4）当采取相对“不安全”操作时，它可以防止或抛出错误。

1.使调试更加容易。那些被忽略或默默失败了的代码错误，会产生错误或抛出异常，因此尽早提醒你代码中的问题，你才能更快地指引到它们的源代码。
2.变量在赋值之前必须声明,防止意外的全局变量。如果没有严格模式，将值分配给一个未声明的变量会自动创建该名称的全局变量。这是JavaScript中
最常见的错误之一。在严格模式下，这样做的话会抛出错误。

二、进入标志
进入"严格模式"的标志，是下面这行语句：
　　"use strict";
老版本的浏览器会把它当作一行普通字符串，加以忽略。

三、如何调用
"严格模式"有两种调用方法，适用于不同的场合。
3.1 针对整个脚本文件
将"use strict"放在脚本文件的第一行，则整个脚本都将以"严格模式"运行。如果这行语句不在第一行，则无效，整个脚本以"正常模式"运行。
如果不同模式的代码文件合并成一个文件，这一点需要特别注意。
(严格地说，只要前面不是产生实际运行结果的语句，"use strict"可以不在第一行，比如直接跟在一个空的分号后面。)
　　<script>
　　　　"use strict";
　　　　console.log("这是严格模式。");
　　</script>

　　<script>
　　　　console.log("这是正常模式。");kly, it's almost 2 years ago now. I can admit it now - I run it on my school's network that has about 50 computers.
　　</script>
上面的代码表示，一个网页中依次有两段Javascript代码。前一个script标签是严格模式，后一个不是。

3.2 针对单个函数
将"use strict"放在函数体的第一行，则整个函数以"严格模式"运行。
　　function strict(){
　　　　"use strict";
　　　　return "这是严格模式。";
　　}

　　function notStrict() {
　　　　return "这是正常模式。";
　　}

3.3 脚本文件的变通写法
因为第一种调用方法不利于文件合并，所以更好的做法是，借用第二种方法，将整个脚本文件放在一个立即执行的匿名函数之中。
　　(function (){
　　　　"use strict";
　　　　// some code here
　　 })();